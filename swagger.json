{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "FlatWhiteUni Server REST API",
    "description": "FlatWhiteUni Project Server",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "pycfy2lf33.execute-api.us-east-1.amazonaws.com/develop",
  "basePath": "/api",
  "tags": [
    {
      "name": "FlatWhiteUni",
      "description": "API for FlatWhiteUni server in the system"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/universities": {
      "post": {
        "tags": [
          "Universities"
        ],
        "summary": "Add a new university in system",
        "description": "Create new university in system",
        "parameters": [
          {
            "name": "university",
            "in": "body",
            "description": "university that we want to create",
            "schema": {
              "$ref": "#/definitions/University"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New university is created",
            "schema": {
              "$ref": "#/definitions/University"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Universities"
        ],
        "summary": "Get all universities in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Universities"
            }
          }
        }
      }
    },
    "/universities/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of university that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Universities"
        ],
        "summary": "Get university with given ID",
        "responses": {
          "200": {
            "description": "University is found",
            "schema": {
              "$ref": "#/definitions/University"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete university with given ID",
        "tags": [
          "Universities"
        ],
        "responses": {
          "200": {
            "description": "University is deleted",
            "schema": {
              "$ref": "#/definitions/University"
            }
          }
        }
      },
      "put": {
        "summary": "Update university with give ID",
        "tags": [
          "Universities"
        ],
        "parameters": [
          {
            "name": "university",
            "in": "body",
            "description": "university with new values of properties",
            "schema": {
              "$ref": "#/definitions/University"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "university is updated",
            "schema": {
              "$ref": "#/definitions/University"
            }
          }
        }
      }
    },
    "/universities/name/{name}": {
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "required": true,
          "description": "Name of university that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Universities"
        ],
        "summary": "Get university with given name",
        "responses": {
          "200": {
            "description": "University is found",
            "schema": {
              "$ref": "#/definitions/University"
            }
          }
        }
      }
    },
    "/universities/city/{city}": {
      "parameters": [
        {
          "name": "city",
          "in": "path",
          "required": true,
          "description": "City of universities that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Universities"
        ],
        "summary": "Get universities with given city",
        "responses": {
          "200": {
            "description": "University is found",
            "schema": {
              "$ref": "#/definitions/University"
            }
          }
        }
      }
    },

    "/schools":{
      "post": {
        "tags": [
          "Schools"
        ],
        "summary": "Add a new school in system",
        "description": "Create new school in system",
        "parameters": [
          {
            "name": "school",
            "in": "body",
            "description": "school that we want to create",
            "schema": {
              "$ref": "#/definitions/School"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New school is created",
            "schema": {
              "$ref": "#/definitions/School"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Schools"
        ],
        "summary": "Get all schools in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Schools"
            }
          }
        }
      }
    },
    
    "/schools/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of school that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Schools"
        ],
        "summary": "Get a school with given ID",
        "responses": {
          "200": {
            "description": "School is found",
            "schema": {
              "$ref": "#/definitions/School"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a school with given ID",
        "tags": [
          "Schools"
        ],
        "responses": {
          "200": {
            "description": "School is deleted",
            "schema": {
              "$ref": "#/definitions/School"
            }
          }
        }
      },
      "put": {
        "summary": "Update a school with given ID",
        "tags": [
          "Schools"
        ],
        "parameters": [
          {
            "name": "school",
            "in": "body",
            "description": "school with new values of properties",
            "schema": {
              "$ref": "#/definitions/School"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "school is updated",
            "schema": {
              "$ref": "#/definitions/School"
            }
          }
        }
      }
    },

    "/schools/name/{name}": {
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "required": true,
          "description": "Name of school(s) that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Schools"
        ],
        "summary": "Get shool(s) with given name",
        "responses": {
          "200": {
            "description": "School(s) is found",
            "schema": {
              "$ref": "#/definitions/School"
            }
          }
        }
      }
    },
    "/schools/universityName/{universityName}": {
      "parameters": [
        {
          "name": "universityName",
          "in": "path",
          "required": true,
          "description": "University of schools that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Schools"
        ],
        "summary": "Get schools with given university name",
        "responses": {
          "200": {
            "description": "Schools are found",
            "schema": {
              "$ref": "#/definitions/Schools"
            }
          }
        }
      }
    },
    
    "/schools/universityId/{universityId}": {
      "parameters": [
        {
          "name": "universityId",
          "in": "path",
          "required": true,
          "description": "University Id of schools that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Schools"
        ],
        "summary": "Get schools with given university id",
        "responses": {
          "200": {
            "description": "Schools are found",
            "schema": {
              "$ref": "#/definitions/Schools"
            }
          }
        }
      }
    },


    "/majors":{
      "post": {
        "tags": [
          "Majors"
        ],
        "summary": "Add a new major in system",
        "description": "Create new major in system",
        "parameters": [
          {
            "name": "major",
            "in": "body",
            "description": "major that we want to create",
            "schema": {
              "$ref": "#/definitions/Major"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New Major is created",
            "schema": {
              "$ref": "#/definitions/School"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Majors"
        ],
        "summary": "Get all majors in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Majors"
            }
          }
        }
      }
    },
    
    "/majors/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of major that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Majors"
        ],
        "summary": "Get a major with given ID",
        "responses": {
          "200": {
            "description": "Major is found",
            "schema": {
              "$ref": "#/definitions/Major"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a major with given ID",
        "tags": [
          "Majors"
        ],
        "responses": {
          "200": {
            "description": "Major is deleted",
            "schema": {
              "$ref": "#/definitions/Major"
            }
          }
        }
      },
      "put": {
        "summary": "Update a major with given ID",
        "tags": [
          "Majors"
        ],
        "parameters": [
          {
            "name": "major",
            "in": "body",
            "description": "major with new values of properties",
            "schema": {
              "$ref": "#/definitions/Major"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Major is updated",
            "schema": {
              "$ref": "#/definitions/Major"
            }
          }
        }
      }
    },

    "/majors/name/{name}": {
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "required": true,
          "description": "Name of major(s) that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Majors"
        ],
        "summary": "Get major(s) with given name",
        "responses": {
          "200": {
            "description": "major(s) is found",
            "schema": {
              "$ref": "#/definitions/Majors"
            }
          }
        }
      }
    },
    "/majors/schoolName/{schoolName}": {
      "parameters": [
        {
          "name": "schoolName",
          "in": "path",
          "required": true,
          "description": "School of majors that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Majors"
        ],
        "summary": "Get majors with given school name",
        "responses": {
          "200": {
            "description": "majors are found",
            "schema": {
              "$ref": "#/definitions/Majors"
            }
          }
        }
      }
    },
    
    "/majors/schoolId/{schoolId}": {
      "parameters": [
        {
          "name": "schoolId",
          "in": "path",
          "required": true,
          "description": "School Id of schools that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Majors"
        ],
        "summary": "Get majors with given school id",
        "responses": {
          "200": {
            "description": "Majors are found",
            "schema": {
              "$ref": "#/definitions/Majors"
            }
          }
        }
      }
    }


  },
  
  

  "definitions": {
    
    "University": {
      "required":[
        "name",
        "city",
        "_id"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "name": {
          "type": "string",
          "uniqueItems": true
        },
        "city": {
          "type": "string"
        },
        "geopoint":{
          "type":"geopoint",
          "$ref": "#/definitions/geopoint"
        },
        "uniBadgeId":{
          "type":"string"
        }
    }
  },

  "geopoint":{
    "required":[
      "lat",
      "lng"
    ],
    "properties":{
      "lat":{
        "type":"number"
      },
      "lng":{
        "type":"number"
      }
    }
  },

  "Universities": {
      "type": "array",
      "$ref": "#/definitions/University"
    },

  "School": {
      "required":[
        "name",
        "universityName",
        "universityId",
        "_id"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "name": {
          "type": "string"
          
        },
        "universityName": {
          "type": "string"
        },
        "universityId":{
          "type": "string"
        }
    }
  },



  "Schools": {
      "type": "array",
      "$ref": "#/definitions/School"
    },

  "Major": {
    "required":[
        "name",
        "schoolName",
        "schoolId",
        "_id"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "name": {
          "type": "string"
          
        },
        "schoolName": {
          "type": "string"
        },
        "schoolId":{
          "type": "string"
        }
    }
  },
  "Majors": {
      "type": "array",
      "$ref": "#/definitions/Major"
    }  

}
}